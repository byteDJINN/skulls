syntax = "proto3";

package skulls; 

enum Card {
    ROSE = 0;
    SKULL = 1;
    HIDDEN = 2;
}

// private information to each player
message KnownDiscardedCard {
    string knowing_player_id = 1;
    string player_id = 2;
    Card card = 3;
}

message PlayerData {
    string player_id = 1;
    repeated Card hand = 2;
    repeated Card played = 3;
    int32 points = 4; 
}

message GameState {
    repeated PlayerData player_data = 1; // in turn order
    int32 turn_index = 2; // index in data of player who's turn it is
    repeated KnownDiscardedCard known_discarded_cards = 3; // private to the current requester
}

message BetAction {
    repeated string player_ids = 1; // repeat player's id for the number of their cards to flip
}

message PassAction {}
message SkullAction {}
message RoseAction {}

message ActionRequest {
    oneof action {
        BetAction bet_action = 2;
        PassAction pass_action = 3;
        SkullAction skull_action = 4;
        RoseAction rose_action = 5;
    }
}

service GameService {
    // client should with an ActionRequest each time they receive an GameState
    rpc GetAction(stream ActionRequest) returns (stream GameState); 
}